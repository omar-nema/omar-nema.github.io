
//.home-button {
//    position: fixed;
//    z-index: 1000;
//    width: 20px;
//    height: 20px;
//    top: 3rem;
//    right: 1.5%;
//    opacity: .7;      
//}
//
//.image-button {
//    position: fixed;
//    z-index: 1000;
//    width: 25px;
//    height: 25px;
//    top: 6rem;
//    right: 1.5%; 
//    box-shadow: 0 1px 1px rgba(0, 0,0, .3);
//    border-radius: 100%; 
//    opacity: .7
//}
//.text-button {
//     position: fixed;
//    z-index: 100;
//    width: 25px;
//    height: 25px;
//  //  background-color: $project-info-color;
//    top: 8rem;
//    right: 1.5%;
//        box-shadow: 0 1px 1px rgba(0, 0,0, .3);
//    border-radius: 100%;
//    opacity: .7;    
//}
//.project-info-button {
//    position: fixed;
//    right: 1.5%;
//    top: 0%;
//    width: 1.5rem;
//    z-index: 1000;
//    height: 1.5rem;
//    
////    width: $project-info-padding-bottom - .2rem;
////    height: $project-info-padding-bottom - .2rem;
//    background-color: white;   
//  //  border: 1px solid white;
//}


//<!--
//<link href='https://fonts.googleapis.com/css?family=Quicksand' rel='stylesheet' type='text/css'>
//
//<script type="text/javascript">
//    (function() {
//        var path = '//easy.myfonts.net/v2/js?sid=187188(font-family=Brandon+Grotesque+Regular)&sid=187189(font-family=Brandon+Grotesque+Light)&sid=187190(font-family=Brandon+Grotesque+Bold)&sid=187194(font-family=Brandon+Grotesque+Medium)&key=YyAjJbV0Mu',
//            protocol = ('https:' == document.location.protocol ? 'https:' : 'http:'),
//            trial = document.createElement('script');
//        trial.type = 'text/javascript';
//        trial.async = true;
//        trial.src = protocol + path;
//        var head = document.getElementsByTagName("head")[0];
//        head.appendChild(trial);
//    })();
//</script>
//-->

//
//function(event){ //stop listening
//            if (currCard){
//                currCardClassChange(currCard, 'card-selector', currCard.attr('default'));                
//            }
//            currCard = null;
//            $('.cardholder').unbind('mousemove');
//            $('.card').unbind('mouseenter');
//    
//        }  


//        function(event){
//        
//            var prevX;
//            var prevMove, currMove;
//            var next;
//            var initialX;
//            var prevDirection;
//            var currHolder = $(this);
//            $('.card').one('mousemove', function(event2){            //MAKE SURE THIS RUNS JUST ONCE!!
//                $('.card').unbind('mousemove');             
//                initialX = parseFloat(event.pageX) - parseFloat($(currHolder).offset().left);
//                currCard = $(this); //enter selects child
//                   
//                $(currHolder).mousemove(function(event){ 
//                    
//                    currCardClassChange(currCard, currCard.attr('default'), 'card-selector');
//                    var currX = parseFloat(event.pageX) - parseFloat($(this).offset().left);  
//                    var currDirection = parseFloat(currX - prevX); 
//                    //update initialX if direction switched
//                    if (prevX && prevDirection){   
//                        var directionSwitch = Math.sign(currDirection)*Math.sign(prevDirection)==-1;
//                        if (directionSwitch){
//                            initialX = prevX;
//                        };                         
//                    };
//                    //detect if mouse movement has passed critical threshold to flip cards
//                    var currMove = (currX-initialX)/parseFloat($(this).width());
//                    var criticalMove = Math.abs(currMove) > fractionIncrement;    
//                    if (criticalMove){
//                        initialX = currX;      
//                        //new card coming in
//                        if (currCard !== getCardInSequence(currCard, currDirection) ){
//                            
//                            currCardClassChange(currCard, 'card-selector', currCard.attr('default'));
//                            currCard = getCardInSequence(currCard, currDirection);
//                            currCardClassChange(currCard, currCard.attr('default'), 'card-selector');                      
//                        }                                    
//                    };
//                    if (prevX) {
//                        prevDirection = parseFloat(currDirection);
//                    };
//                    prevX = currX;
//                    prevMove = currMove;
//                });    
//                
//            });
//        }


//@media only screen and (max-width: 1035px)
//    {
//        .content {
//        width: 96vw; 
//        }
//    }


//.card.tags {
//    transform: translateX($tagcard-translateX) translateY($tagcard-translateY);
//    opacity: $tagcard-opacity;
//    z-index: 2;
//}
//.card.thumbnail {
//    transform: translateX($thumbnailcard-translateX) translateY($thumbnailcard-translateY);
//    opacity: $thumbnailcard-opacity;    
//    z-index: 3;
//}
//.card.synposis {
//    transform: translateX($synposiscard-translateX) translateY($synposiscard-translateY);    
//    opacity: $synposiscard-opacity;  
//    z-index: 4;
//    box-shadow: 0 .5px .5px 0px black;    
//}







//                        if (Math.sign(currDirection)*Math.sign(prevDirection)==1)
//                        {
//                            directionSwitch = true;
//                            initialX = prevX;
////                            console.log('directionswitch', directionSwitch);
//                        };   
                        
//                        currCard.css('background-color', 'yellow');
//                        if (currX > prevX){
//    //                        getCardInSequence(currCard, 1)
//                            currMovingRight = true;
//                        }
//                        else if (currX < prevX){
//    //                        getCardInSequence(currCard, -1)                    
//                            currMovingRight = false;   
//                        };        





//    var getCardInSequence = function(card, next){
//        
//        var order = parseInt(card.attr('order'));
//        var title = card.attr('title');
//        var nextCard;
//        //reached end of stack
//        if ( (order == 3 && next==-1) || (order == 1 && next==1)  ){
////           return null;
//        }
//        else {
//            var ordernext = parseInt(order) - parseInt(next);
//            nextCard = $('.'+ title).find("div[order=" + ordernext + "]");
////            currCard.css('background-color', 'blue');
//            currCard = nextCard;
//        };
//    };
//    



//    
//    $('.cardholder').mouseover(function(event){
//           
//        $('.cardholder').mousemove(function(event){
//            var newX = event.pageX - $(this).offset().left;
//            var newY = event.pageY - $(this).offset().top;
//            if (!currX){
//                currX = newX;
//            }
//            if (currCard){
//                currCard.css('background-color', 'yellow');
//                if (newX > currX){
//                    getCardInSequence(currCard, 1)
//                    movingRight = true;
//                    movingLeft = false;
//                }
//                else if (newX < currX){
//                    getCardInSequence(currCard, -1)                    
//                    movingRight = false;
//                    movingLeft = true;       
//                }; 
//            }
//            currX = newX;
//
//        });
//        //fires multiple times before leave event!
//
//        
//    });
    














//function gets horizontal distance two cards, used as gauge for amount of distance mouse should before to elicit 'card flip'
//var getXIncrementCard = function(){
////    var cardholder = $('.cardholder').first();
////    var thirdCardLeft = parseFloat(cardholder.find('.card3').first().position().left);
////    var secondCardLeft = parseFloat(cardholder.find('.card2').first().position().left);
////    return fractionIncrement = Math.abs((secondCardLeft - thirdCardLeft)/ parseFloat(cardholder.width()));
//    return fractionIncrement = 
//};
//            getXIncrementCard();


//6/20 morning

//old js
//var setLayout = function(categoryFile, projectFile){
//    d3.csv(categoryFile, function(categories){
//        d3.csv(projectFile, function(projects){ 
//             for (i=0; i<categories.length; i++){
//                var projectsByCategory = projects.filter(function(d){return d.category === categories[i].category;});  
//                if (categories[i].layout == 'left'){
//                      generateCSS($('.content'), categories[i], projectsByCategory);
//
//                  }
//                else if (categories[i].layout == 'right'){
//                      generateCSS($('.content'), categories[i], projectsByCategory);
//                  };
//              };       
//        });   
//    });
//};
//
//
////card coloring should be done based on classes
//    
//var generateCSS = function($contentholder, category, projects){
//    var categoryHolder = $contentholder.find('.' + category.category);
//
//    for (var i=0; i<projects.length; i++){
//        var cardHolder = categoryHolder.find('.cardholder.' +projects[i].title);
//        var cardholderStyle = {
//            'width': projects[i].width,
//            //maintain aspect ratio           
//            'height': .73*parseInt(projects[i].width)+'vw',            
//            'position': projects[i].position,
//            'top': projects[i].top,
//            'left': projects[i].left,
//            'border-radius': projects[i].borderradius}
//        cardHolder.css(cardholderStyle);
// 
//        var numCards = parseInt(projects[i].numCards);
//        var currVal = 6;
//        var offset = 6;
//        //this below needs to be generative
//        var cardCats = ['thumbnail', 'synposis', 'tags'];
//        opacity = [.2, .4, .9];
//        for (var j=0; j<numCards; j++){
//            currOpacity = opacity[j];
//            //very weak please fix
//            var card = cardHolder.find('.card.' + cardCats[j] + '.' + projects[i].title);     
//            var cardStyle = {
//                'width': '85%',
//                'height': '85%',
//                'transform': 'translateX(' + currVal + '%) translateY(' + currVal + '%)',
//                'background-color': projects[i].backgroundcolor,
//                'border-radius': projects[i].borderradius,
//                'position': 'absolute',
//                'font-size': projects[i].fontsize,
//                'opacity': currOpacity,
//                'color': 'white',
//                'z-index': j};  
//                
//            card.css(cardStyle);
////            if (j == numCards -1){
////                card.append('<p>' + projects[i].synposis + '</p>')  
////            };
//      
//            currVal = currVal+offset;
//            }
//    };        
//};


//    .leftcontent {
////        height: 42rem;  
//    //    background-color: blue;
//        float: left;
//        //width: 47rem;
//        height: 100%;
//        width: 100%
//    }
//
//    .rightcontent {
////        width: 300px;
//        width: 35%;
//        height: 100%;
//        float: left;
//        //height: 42rem;  
//    }
//
//
//
//    .leftcontent section:nth-child(1) {
//        width: 100%;
//        height: 55%;
////        border: .5px dotted black;
////    //    background-color: black;  
//        position: relative;
//
//    }
//    .leftcontent section:nth-child(2) {
//        width: 100%;
//        height: 45%;
////        border: .5px dotted black;
//        position: relative;    
//    }
//
//    .rightcontent section:nth-child(1) {
//          width: 100%;
//        height: 100%;
////        border: .5px dotted black;    
//        position: relative;    
//    }



//    .hospital {
//        background-color: blue;
//    //    width: 250px;
//    //    height: 185px;
////        width: 40%;
////        padding: 15%; 
//        height: 18vw;
//        width: 25vw;
//        position: absolute;
//        top: 19%;
//        left: 5%;
//        border-radius: 9%;
//    }
//
//    .rx {
//        background-color: blue;
////        width: 31%;
////        padding: 12%;
//        height: 13vw;
//        width: 18vw;        
//        position: absolute;
//        top: 5%;
//        left: 52%;  
//            border-radius: 9%;
//    }
//
//    .personaldata {
//        background-color: blue;
////        width: 27%;
////        padding: 10%;
//        height: 11vw;
//        width: 15vw;           
//        position: absolute;
//        top: 60%;
//        right: 5%;    
//        border-radius: 9%;    
//    }
//
//    .thesis{
//        background-color: red;
////        width: 34%;
////        padding: 13%;
//       height: 15vw;
//        width: 22vw;         
//        position: absolute;
//        top: 0%;
//        left: 15%;     
//                border-radius: 9%;
//    }
//    .narrative{
//        background-color: red;
////        width: 28%;
////        padding: 10%;
//        
//        width: 15vw;
//        height: 11vw;
////        height: 40%;
//
////        width: 150px;
////        height: 110px;
//        position: absolute;
//        top: 42%;
//        left: 60%;   
//        border-radius: 9%;
////        color: white;
////        font-size: 8px;
//        font-size: 1.5vw;
//        text-align: center;
//    }
//    
//    .narrative p {
//        color: white;
//        font-size: 1.5vw;
//        position: absolute;
//        top: 0;
//        left: 0;
//        right: 0;
//        bottom: 0;
//    }
//
//    .tools {
//        background-color: green;
////        width: 30%;
////        padding: 12%;
//        width: 15vw;
//        height: 11vw;
//        position: absolute;
//        top: 20%;
//        left: 35%;   
//            border-radius: 9%;
//    }
//    .table {
//        background-color: green;
////        width: 30%;
////        padding: 12%;
//        width: 14vw;
//        height: 10vw;        
//        position: absolute;
//        top: 50%;
//        left: 5%;     
//        border-radius: 9%;
//    }
//    .tea {
//        background-color: green;
////        width: 150px;
////        height: 110px;
//        width: 15vw;
//        height: 11vw;        
//        position: absolute;
//        top: 75%;
//        left: 20%;    
//        border-radius: 9%;
//    }
//    
//
//}




//
//@media (max-width: 320px){
//    
//    html {font-size: 112%;}
//    
//    .column{
//        float: left;
//        padding-left: 1rem;
//        padding-right: 1rem;
//    }
//    
//    .column.full {width: 100%;}
//    .column.two-thirds {width: 66.7%;}
//    .column.half {width: 50%;}
//    .column.third {width: 33.3%;}
//    .column.fourth {width: 25%;}
//    .column.flow-opposite {float: right;}
//}
//



//.leftcontent:nth-child(2) {
//    width: 100%;
//  background-color: black;  
//}

//
//<!--
//       {% for category in site.data.categories %}
//            {% if category.layout == 'left' %}
//                       <section class="{{category.category}}">
//                  {% for project in site.data.projects %}
//                              {% if category.category == project.category %}
//                                 <div class="cardholder {{project.title}}" style="color:{{project.color}}; width: {{project.width}}; height: {{project.height}}; position: {{project.position}}; top: {{project.top}}; left: {{project.left}}; border-radius: {{project.border-radius}}">
//                                    <div class="card thumbnail {{project.title}}" style="opacity: .2; background-color: {{category.color}}; width: 85%; height: 85%; transform: translateX(6%) translateY(6%); border-radius: {{project.border-radius}}; position:absolute; z-index: 1; font-size: {{project.font-size}}"></div>  
//                                    <div class="card synposis {{project.title}}" style="opacity: .42; background-color:{{category.color}}; width: 85%; height: 85%; transform: translateX(12%) translateY(12%); border-radius: 9%; position: absolute; z-index: 2; font-size: {{project.font-size}}"></div>
//                                    <div class="card tags {{project.title}}" style="opacity: 1;  position:absolute; width: 85%; height:85%; background-color:{{category.color}}; transform: translateX(18%) translateY(18%); border-radius: {{project.border-radius}}; z-index: 3; font-size: {{project.font-size}}; box-shadow: 0 1px 0px 0px grey"><p>{{project.title}}</p></div>
//                           
//                                </div>
//                            {% endif %}
//                  {% endfor %}
//                        </section>
//            {% endif %}
//      {% endfor %}
//-->

//
//
//<!--
//       {% for category in site.data.categories %}
//            {% if category.layout == 'right' %}
//                       <section class="{{category.category}}">
//                  {% for project in site.data.projects %}
//                              {% if category.category == project.category %}
//                                 <div class="cardholder {{project.title}}" style="color:{{project.color}}; width: {{project.width}}; height: {{project.height}}; position: {{project.position}}; top: {{project.top}}; left: {{project.left}}; border-radius: {{project.border-radius}}">
//                                     
//                                        <div class="card thumbnail {{project.title}}" style="opacity: .2; background-color: {{category.color}}; width: 85%; height: 85%; transform: translateX(8%) translateY(8%); border-radius: 9%; position:absolute; z-index: 1; font-size: {{project.font-size}}"></div>                    
//                                        <div class="card synposis {{project.title}}" style="opacity: .42; background-color:{{category.color}}; width: 85%; height: 85%; transform: translateX(13%) translateY(13%); border-radius: {{project.border-radius}}; position: absolute; z-index: 2; font-size: {{project.font-size}}"></div>
//                                        <div class="card tags {{project.title}}" style="opacity: 1;  position:absolute; width: 85%; height:85%; background-color:{{category.color}}; transform: translateX(18%) translateY(18%); border-radius: {{project.border-radius}}; z-index: 3; font-size: {{project.font-size}}; box-shadow: 0 1px 0px 0px grey"><p>{{project.title}}</p></div>
//                                     
//                                </div>
//                            {% endif %}
//                  {% endfor %}
//                        </section>
//            {% endif %}
//      {% endfor %}
//-->




//$(window).resize(function(){
//   //if this is a new size, recalculate css
//});


//        if (i==numCards-1){
//            .css(box-shadow: 0 1px 0px 0px grey);
//        }


//
//{% if category.category == project.category %}
//                                 <div class="cardholder {{project.title}}" style="color:{{project.color}}; width: {{project.width}}; height: {{project.height}}; position: {{project.position}}; top: {{project.top}}; left: {{project.left}}; border-radius: {{project.border-radius}}">
//                                    <div class="card thumbnail {{project.title}}" style="opacity: .2; background-color: {{category.color}}; width: 85%; height: 85%; transform: translateX(6%) translateY(6%); border-radius: {{project.border-radius}}; position:absolute; z-index: 1; font-size: {{project.font-size}}"></div>  
//                                    <div class="card synposis {{project.title}}" style="opacity: .42; background-color:{{category.color}}; width: 85%; height: 85%; transform: translateX(12%) translateY(12%); border-radius: 9%; position: absolute; z-index: 2; font-size: {{project.font-size}}"></div>
//                                    <div class="card tags {{project.title}}" style="opacity: 1;  position:absolute; width: 85%; height:85%; background-color:{{category.color}}; transform: translateX(18%) translateY(18%); border-radius: {{project.border-radius}}; z-index: 3; font-size: {{project.font-size}}; box-shadow: 0 1px 0px 0px grey"><p>{{project.title}}</p></div>
//
//       {% for category in site.data.categories %}
//            {% if category.layout == 'left' %}
//                       <section class="{{category.category}}">
//                  {% for project in site.data.projects %}
//                              {% if category.category == project.category %}
//                                 <div class="cardholder {{project.title}}" style="color:{{project.color}}; width: {{project.width}}; height: {{project.height}}; position: {{project.position}}; top: {{project.top}}; left: {{project.left}}; border-radius: {{project.border-radius}}">
//                                    <div class="card thumbnail {{project.title}}" style="opacity: .2; background-color: {{category.color}}; width: 85%; height: 85%; transform: translateX(6%) translateY(6%); border-radius: {{project.border-radius}}; position:absolute; z-index: 1; font-size: {{project.font-size}}"></div>  
//                                    <div class="card synposis {{project.title}}" style="opacity: .42; background-color:{{category.color}}; width: 85%; height: 85%; transform: translateX(12%) translateY(12%); border-radius: 9%; position: absolute; z-index: 2; font-size: {{project.font-size}}"></div>
//                                    <div class="card tags {{project.title}}" style="opacity: 1;  position:absolute; width: 85%; height:85%; background-color:{{category.color}}; transform: translateX(18%) translateY(18%); border-radius: {{project.border-radius}}; z-index: 3; font-size: {{project.font-size}}; box-shadow: 0 1px 0px 0px grey"><p>{{project.title}}</p></div>
//                           
//                                </div>
//                            {% endif %}
//                  {% endfor %}
//                        </section>
//            {% endif %}
//      {% endfor %}



//d3.csv('datacopy/categories.csv', function(data){
//
//    
//    console.log(data);
//});
//



//$(window).resize(function(event) {
//  console.log( $(window).width() );
//   
//});


//project sizing and locations handled here
//takes input from csv file
